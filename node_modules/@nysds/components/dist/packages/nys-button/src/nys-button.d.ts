import { LitElement } from "lit";
export declare class NysButton extends LitElement {
    id: string;
    name: string;
    private static readonly VALID_SIZES;
    private _size;
    get size(): (typeof NysButton.VALID_SIZES)[number];
    set size(value: string);
    fullWidth: boolean;
    private static readonly VALID_VARIANTS;
    private _variant;
    get variant(): (typeof NysButton.VALID_VARIANTS)[number];
    set variant(value: string);
    inverted: boolean;
    label: string;
    ariaLabel: string;
    ariaControls: string;
    prefixIcon: string;
    suffixIcon: string;
    circle: boolean;
    icon: string;
    disabled: boolean;
    form: string | null;
    value: string;
    ariaDescription: string;
    private static readonly VALID_TYPES;
    private _type;
    get type(): (typeof NysButton.VALID_TYPES)[number];
    set type(value: string);
    onClick: (event: Event) => void;
    href: string;
    private static readonly VALID_TARGETS;
    private _target;
    get target(): (typeof NysButton.VALID_TARGETS)[number];
    set target(value: string);
    getButtonElement(): Promise<HTMLElement | null>;
    static styles: import("lit").CSSResult;
    private _internals;
    /**************** Lifecycle Methods ****************/
    static formAssociated: boolean;
    constructor();
    connectedCallback(): void;
    /******************** Functions ********************/
    private _generateUniqueId;
    private _manageFormAction;
    /******************** Event Handlers ********************/
    private _handleFocus;
    private _handleBlur;
    private _handleClick;
    private _handleKeydown;
    /******************** Public Methods ********************/
    focus(options?: FocusOptions): void;
    render(): import("lit-html").TemplateResult<1>;
}
