import { LitElement } from "lit";
export declare class NysModal extends LitElement {
    id: string;
    heading: string;
    subheading: string;
    open: boolean;
    mandatory: boolean;
    private static readonly VALID_WIDTHS;
    private _width;
    get width(): (typeof NysModal.VALID_WIDTHS)[number];
    set width(value: string);
    private _actionButtonSlot;
    private _prevFocusedElement;
    private _originalBodyOverflow;
    private hasBodySlots;
    private hasActionSlots;
    static styles: import("lit").CSSResult;
    /**************** Lifecycle Methods ****************/
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    firstUpdated(): void;
    updated(changeProps: Map<string, any>): Promise<void>;
    /******************** Functions ********************/
    private _hideBodyScroll;
    private _restoreBodyScroll;
    private _savePrevFocused;
    private _focusOnModal;
    private _restorePrevFocused;
    private _handleBodySlotChange;
    private _handleActionSlotChange;
    private _updateSlottedButtonWidth;
    private _dispatchOpenEvent;
    private _dispatchCloseEvent;
    private _getAriaDescribedBy;
    /**
     * This exist to prevent the VO for dismiss button from announcing itself between the heading & subheading/slot content.
     * We add the "Close this window" ariaLabel after the initial VO is done
     */
    private _updateDismissAria;
    /****************** Event Handlers ******************/
    private _handleKeydown;
    private _closeModal;
    render(): "" | import("lit-html").TemplateResult<1>;
}
